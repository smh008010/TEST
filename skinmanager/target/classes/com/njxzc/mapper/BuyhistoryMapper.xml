<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.dao.BuyhistoryMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.model.Buyhistory">
    <id column="buyhisid" jdbcType="INTEGER" property="buyhisid" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="productid" jdbcType="INTEGER" property="productid" />
    <result column="remain" jdbcType="INTEGER" property="remain" />
    <result column="buydate" jdbcType="TIMESTAMP" property="buydate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    buyhisid, customerid, productid, remain, buydate
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.model.BuyhistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from buyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from buyhistory
    where buyhisid = #{buyhisid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from buyhistory
    where buyhisid = #{buyhisid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.model.BuyhistoryExample">
    delete from buyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.model.Buyhistory">
    insert into buyhistory (buyhisid, customerid, productid, 
      remain, buydate)
    values (#{buyhisid,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, 
      #{remain,jdbcType=INTEGER}, #{buydate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.model.Buyhistory">
    insert into buyhistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buyhisid != null">
        buyhisid,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="productid != null">
        productid,
      </if>
      <if test="remain != null">
        remain,
      </if>
      <if test="buydate != null">
        buydate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buyhisid != null">
        #{buyhisid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="remain != null">
        #{remain,jdbcType=INTEGER},
      </if>
      <if test="buydate != null">
        #{buydate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.model.BuyhistoryExample" resultType="java.lang.Long">
    select count(*) from buyhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update buyhistory
    <set>
      <if test="record.buyhisid != null">
        buyhisid = #{record.buyhisid,jdbcType=INTEGER},
      </if>
      <if test="record.customerid != null">
        customerid = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        productid = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.remain != null">
        remain = #{record.remain,jdbcType=INTEGER},
      </if>
      <if test="record.buydate != null">
        buydate = #{record.buydate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update buyhistory
    set buyhisid = #{record.buyhisid,jdbcType=INTEGER},
      customerid = #{record.customerid,jdbcType=INTEGER},
      productid = #{record.productid,jdbcType=INTEGER},
      remain = #{record.remain,jdbcType=INTEGER},
      buydate = #{record.buydate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.model.Buyhistory">
    update buyhistory
    <set>
      <if test="customerid != null">
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        productid = #{productid,jdbcType=INTEGER},
      </if>
      <if test="remain != null">
        remain = #{remain,jdbcType=INTEGER},
      </if>
      <if test="buydate != null">
        buydate = #{buydate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where buyhisid = #{buyhisid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.model.Buyhistory">
    update buyhistory
    set customerid = #{customerid,jdbcType=INTEGER},
      productid = #{productid,jdbcType=INTEGER},
      remain = #{remain,jdbcType=INTEGER},
      buydate = #{buydate,jdbcType=TIMESTAMP}
    where buyhisid = #{buyhisid,jdbcType=INTEGER}
  </update>
  
   <resultMap type="com.njxzc.model.Buyhistory" id="custbuyhistory">
     <id column="buyhisid" jdbcType="INTEGER" property="buyhisid" />
     <result column="customerid" jdbcType="INTEGER" property="customerid" />
     <result column="productid" jdbcType="INTEGER" property="productid" />
     <result column="remain" jdbcType="INTEGER" property="remain" />
     <result column="buydate" jdbcType="TIMESTAMP" property="buydate" />
      <collection property="customer" javaType="com.njxzc.model.Customer">
        <id column="customerid1" jdbcType="INTEGER" property="customerid" />
        <result column="customername" jdbcType="VARCHAR" property="customername" />
         <collection property="product" javaType="com.njxzc.model.Product">
            <id column="productid1" jdbcType="INTEGER" property="productid" />
            <result column="productname" jdbcType="VARCHAR" property="productname" />
            <result column="number" jdbcType="INTEGER" property="number" />
         </collection>
      </collection>
  </resultMap>
     <resultMap type="com.njxzc.model.Buyhistory" id="custbuyhistory2">
     <id column="buyhisid" jdbcType="INTEGER" property="buyhisid" />
     <result column="customerid" jdbcType="INTEGER" property="customerid" />
     <result column="productid" jdbcType="INTEGER" property="productid" />
    
         <collection property="product" javaType="com.njxzc.model.Product">
            <result column="productname" jdbcType="VARCHAR" property="productname" />
         </collection>
  </resultMap>
  <select id="queryhistory" resultMap="custbuyhistory">
  SELECT *  FROM buyhistory,customer,product WHERE buyhistory.customerid=customer.customerid and buyhistory.productid=product.productid ORDER BY buyhistory.customerid
  </select>
  
  <select id="querybyid" parameterType="Integer" resultMap="custbuyhistory">
SELECT *  FROM buyhistory,customer,product WHERE buyhistory.customerid=customer.customerid and buyhistory.productid=product.productid and buyhisid=#{buyhisid}
  </select>
<select id="queryprobycus" parameterType="Integer" resultMap="custbuyhistory2">
SELECT customerid,buyhistory.productid,productname FROM buyhistory,product WHERE buyhistory.productid=product.productid AND remain!=-1*number AND customerid=#{customerid}
</select>
</mapper>