<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.model.Product">
    <id column="productid" jdbcType="INTEGER" property="productid" />
    <result column="productname" jdbcType="VARCHAR" property="productname" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    productid, productname, introduce, isDelete, number
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where productid = #{productid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where productid = #{productid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.model.Product">
    insert into product (productid, productname, introduce, 
      isDelete, number)
    values (#{productid,jdbcType=INTEGER}, #{productname,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        productid,
      </if>
      <if test="productname != null">
        productname,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.model.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productid != null">
        productid = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null">
        productname = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        isDelete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set productid = #{record.productid,jdbcType=INTEGER},
      productname = #{record.productname,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      isDelete = #{record.isDelete,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.model.Product">
    update product
    <set>
      <if test="productname != null">
        productname = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where productid = #{productid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.model.Product">
    update product
    set productname = #{productname,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER}
    where productid = #{productid,jdbcType=INTEGER}
  </update>
</mapper>